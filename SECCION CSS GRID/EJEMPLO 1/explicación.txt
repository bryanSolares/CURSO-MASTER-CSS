1. Consta de columnas y filas
2. Funciona para diseños no responsive
3. Se compone de: FILAS - COLUMNAS - AREAS -CELDAS
4. Se manejan ejes
5. Solo actua dentro del div que se indique como contenedor padre



PROPIEDADES DEL PADRE 
*******************************************************************************************
display: grid | inline-grid
grid-template-columns: <track-size> ....... | <line-name> <track-size> ......
grid-template-columns: 1fr minmax(200px, 1fr)
grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
grid-template-rows: <track-size> ....... | <line-name> <track-size> ......
grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];
grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];
grid-template-columns: repeat(3, 20px [col-start]);
grid-column-start: col-start 2;
grid-template-columns: 1fr 1fr 1fr;
grid-template-columns: 1fr 50px 1fr 1fr;
grid-area: nombre-area
grid-template-area: <grid-area-name> | . | none | ....

Ejemplo.
grid-template-columns: 50px 50px 50px 50px;
grid-template-rows: auto;
grid-template-areas: 
  "header header header header"
  "main main . sidebar"
  "footer footer footer footer";

grid-template: none | <grid-template-rows> / <grid-template-columns>
grid-template:
    [row1-start] "header header header" 25px [row1-end]
    [row2-start] "footer footer footer" 25px [row2-end]
    / auto 50px auto;
Equivalente a: 
  grid-template-rows: [row1-start] 25px [row1-end row2-start] 25px [row2-end];
  grid-template-columns: auto 50px auto;
  grid-template-areas: 
    "header header header" 
    "footer footer footer";

Separación entre cada inicio de fila o columna
grid-column-gap: <line-size>
column-gap: <line-size>
grid-row-gap: <line-size>
row-gap: <line-size>
grid-gap: <grid-row-gap> <grid-column-gap>
gap: <row-gap> <column-gap>

Alineación en filas (horizontal)
justify-items: start | end | center | stretch
justify-self: start | end | center | stretch

Alineación en columnas (vertical)
align-items: start | end | center | stretch
align-self: start | end | center | stretch

Abreviación para alineaciones
place-items: <align-items> <justify-items>


Alineación de la cuadricula entera si es menor al tamaño del contenedor Eje X
justify-content: start | end | center | stretch | space-around | space-beetwen | space-evenly

Alineación de la cuadricula entera si es menor al tamaño del contenedor Eje Y
align-content: start | end | center | stretch | space-around | space-beetwen | space-evenly

Abreviación para alineaciones de cuadricula entera
place-content: <align-content> / <justify-content>

Creación de columnas implicitas
grid-auto-columns: <track-size>
grid-auto-rows: <track-size>

definir como se presentará el flujo al posicionar, de manera horizontal o vertical
grid-auto-flow: row | column | row-dense | column-

CODIGO EQUIVALENTE 
grid: 100px 300px / 3fr 1fr;
=
grid-template-rows: 100px 300px;
grid-template-columns: 3fr 1fr;

grid: auto-flow / 200px 1fr;
=
grid-auto-flow: row;
grid-template-columns: 200px 1fr;

grid: auto-flow dense 100px / 1fr 2fr;
=
grid-auto-flow: row dense;
grid-auto-rows: 100px;
grid-template-columns: 1fr 2fr;

grid: 100px 300px / auto-flow 200px;
=
grid-template-rows: 100px 300px;
grid-auto-flow: column;
grid-auto-columns: 200px;

grid: [row1-start] "header header header" 1fr [row1-end]
          [row2-start] "footer footer footer" 25px [row2-end]
          / auto 50px auto;
=
grid-template-areas: 
      "header header header"
      "footer footer footer";
    grid-template-rows: [row1-start] 1fr [row1-end row2-start] 25px [row2-end];
    grid-template-columns: auto 50px auto;

PROPIEDADES ANIMABLES
(grid-)gap, (grid-)row-gap, (grid-)column-gap
grid-template-columns	
grid-template-rows	


PROPIEDADES DEL HIJO 
*******************************************************************************************
propiedades que no tienen efecto sobre la cuadricula
float
display: inline-block
display: table-cell
vertical-align
column-*



INDICA DONDE COMIENZA O TERMINA O ELEMENTO
grid-column-start: <number> | <name> | span <number> | span <name> | auto;
grid-column-end: <number> | <name> | span <number> | span <name> | auto;
grid-row-start: <number> | <name> | span <number> | span <name> | auto;
grid-row-end: <number> | <name> | span <number> | span <name> | auto;
grid-column-start: 2;
grid-column-end: five;
grid-row-start: row1-start;
grid-row-end: 3;

ABREVIACIONES
grid-column: <start-line> / <end-line> | <start-line> / span <value>;
grid-row: <start-line> / <end-line> | <start-line> / span <value>;

DAR NOMBRE A CUADRICULA 
grid-area: <name> | <row-start> / <column-start> / <row-end> / <column-end>;

grid-area: <grid-row-start> / <grid-column-start> / <grid-row-end> / <grid-column-end>
grid-area: 1 / col4-start / last-line / 6;

ALINEACION EN FORMA DE COLUMNAS EN SU PROPIA POSICIÓN EJE X
justify-self: start | end | center | stretch;

ALINEACION EN FORMA DE COLUMNAS EN SU PROPIA POSICIÓN EJE Y
align-self: start | end | center | stretch;
align-items: start | end | center | stretch;
place-self: <align-self> / <justify-self>